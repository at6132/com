# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For PyCharm
#  Community Edition, use 'community' for PyCharm Professional Edition, use 'professional'
.idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Database files
*.db
*.sqlite
*.sqlite3
com_database.db
com_database.db.backup

# API Keys and Secrets
keys/
*.json
!requirements.txt
!package.json
!tsconfig.json
secrets.yaml
secrets.yml
.secrets
config/secrets/

# Trading Data and Logs
data/logs/
data/backups/
data/exports/
*.csv
*.parquet
captured_websocket_messages.json
websocket_events.json

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# Alembic
alembic/versions/__pycache__/

# Redis dumps
dump.rdb

# Logs
*.log
logs/

# Executable files
*.exe
*.dmg
*.pkg
*.deb
*.rpm

# Compressed files
*.zip
*.tar.gz
*.rar
*.7z

# Trading specific ignores
balance_*.csv
orders_*.csv
positions_*.csv
performance_*.csv
strategy_*.csv
backtest_*.csv
*.png
*.jpg
*.jpeg
*.gif

# Configuration overrides
config/local.yaml
config/production.yaml
config/development.yaml

# IDE and editor files
*.sublime-project
*.sublime-workspace
.atom/
.brackets.json

# Node.js (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Rust (if any Rust components)
target/
Cargo.lock

# Go (if any Go components)
*.exe
*.exe~
*.dll
*.so
*.dylib
vendor/

# Java (if any Java components)
*.class
*.jar
*.war
*.ear
*.nar
hs_err_pid*

# Backup files
*.bak
*.backup
*.old

# System files
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Testing
.coverage
.pytest_cache/
test_results/
test_outputs/

# Documentation builds
docs/_build/
docs/site/

# Local development
.local/
local/
dev/

# Performance monitoring
*.prof
*.pprof

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# Kubernetes
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry

# Vagrant
.vagrant/

# SSH keys
*.pem
*.key
id_rsa*
id_ed25519*

# SSL certificates
*.crt
*.csr
*.key
*.p12
*.pfx

# Monitoring and metrics
*.metrics
*.stats
